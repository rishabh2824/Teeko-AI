{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000'; // Backend URL\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const getGameState = async () => {\n  try {\n    console.log('Calling GET /');\n    const response = await axiosInstance.get('/');\n    console.log('Response from GET /:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error in getGameState:', error);\n    throw error;\n  }\n};\nexport const aiMove = async () => {\n  try {\n    console.log('Calling POST /ai-move/');\n    const response = await axiosInstance.post('/ai-move/');\n    console.log('Response from POST /ai-move/:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error in aiMove:', error);\n    throw error;\n  }\n};\nexport const opponentMove = async move => {\n  try {\n    console.log('Calling POST /opponent-move/ with move:', move);\n    const response = await axiosInstance.post('/opponent-move/', {\n      move\n    });\n    console.log('Response from POST /opponent-move/:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error in opponentMove:', error);\n    throw error;\n  }\n};\nexport const resetGame = async () => {\n  try {\n    console.log('Calling POST /reset/');\n    const response = await axiosInstance.post('/reset/');\n    console.log('Response from POST /reset/:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error in resetGame:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","headers","getGameState","console","log","response","get","data","error","aiMove","post","opponentMove","move","resetGame"],"sources":["C:/Users/risha/PycharmProjects/hw9/myteekoai/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000'; // Backend URL\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const getGameState = async () => {\r\n    try {\r\n        console.log('Calling GET /');\r\n        const response = await axiosInstance.get('/');\r\n        console.log('Response from GET /:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error in getGameState:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const aiMove = async () => {\r\n    try {\r\n        console.log('Calling POST /ai-move/');\r\n        const response = await axiosInstance.post('/ai-move/');\r\n        console.log('Response from POST /ai-move/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error in aiMove:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const opponentMove = async (move) => {\r\n    try {\r\n        console.log('Calling POST /opponent-move/ with move:', move);\r\n        const response = await axiosInstance.post('/opponent-move/', { move });\r\n        console.log('Response from POST /opponent-move/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error in opponentMove:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const resetGame = async () => {\r\n    try {\r\n        console.log('Calling POST /reset/');\r\n        const response = await axiosInstance.post('/reset/');\r\n        console.log('Response from POST /reset/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error in resetGame:', error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACQ,GAAG,CAAC,GAAG,CAAC;IAC7CH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAClD,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACAN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACY,IAAI,CAAC,WAAW,CAAC;IACtDP,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3D,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACAT,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEQ,IAAI,CAAC;IAC5D,MAAMP,QAAQ,GAAG,MAAMP,aAAa,CAACY,IAAI,CAAC,iBAAiB,EAAE;MAAEE;IAAK,CAAC,CAAC;IACtET,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACjE,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACAV,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACY,IAAI,CAAC,SAAS,CAAC;IACpDP,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACzD,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}