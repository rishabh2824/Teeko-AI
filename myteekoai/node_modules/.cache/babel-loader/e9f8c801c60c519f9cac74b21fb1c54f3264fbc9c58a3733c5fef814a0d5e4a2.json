{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_BACKEND_URL || 'http://127.0.0.1:8000'; // Default to localhost\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 seconds timeout\n});\n\n// Handle API errors\nconst handleApiError = error => {\n  var _error$response, _error$response$data;\n  console.error('API Error:', error);\n  const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'An error occurred while communicating with the server.';\n  return new Error(errorMessage);\n};\n\n// Logging helper\nconst log = (message, data) => {\n  if (process.env.REACT_APP_DEBUG === 'true') {\n    console.log(message, data);\n  }\n};\n\n// API Methods\nexport const getGameState = async () => {\n  try {\n    log('Calling GET /');\n    const response = await axiosInstance.get('/');\n    log('Response from GET /:', response.data);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const aiMove = async () => {\n  try {\n    console.log('Calling POST /ai-move/');\n    const response = await axiosInstance.post('/ai-move/');\n    console.log(response);\n    console.log('Response from POST /ai-move/:', response.data);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const opponentMove = async move => {\n  try {\n    log('Calling POST /opponent-move/ with move:', move);\n    const response = await axiosInstance.post('/opponent-move/', {\n      move\n    });\n    log('Response from POST /opponent-move/:', response.data);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};\nexport const resetGame = async () => {\n  try {\n    log('Calling POST /reset/');\n    const response = await axiosInstance.post('/reset/');\n    log('Response from POST /reset/:', response.data);\n    return response.data;\n  } catch (error) {\n    throw handleApiError(error);\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_BACKEND_URL","axiosInstance","create","baseURL","headers","timeout","handleApiError","error","_error$response","_error$response$data","console","errorMessage","response","data","detail","Error","log","message","REACT_APP_DEBUG","getGameState","get","aiMove","post","opponentMove","move","resetGame"],"sources":["C:/Users/risha/PycharmProjects/hw9/myteekoai/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || 'http://127.0.0.1:8000'; // Default to localhost\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    timeout: 10000, // 10 seconds timeout\r\n});\r\n\r\n// Handle API errors\r\nconst handleApiError = (error) => {\r\n    console.error('API Error:', error);\r\n    const errorMessage = error.response?.data?.detail || 'An error occurred while communicating with the server.';\r\n    return new Error(errorMessage);\r\n};\r\n\r\n// Logging helper\r\nconst log = (message, data) => {\r\n    if (process.env.REACT_APP_DEBUG === 'true') {\r\n        console.log(message, data);\r\n    }\r\n};\r\n\r\n// API Methods\r\nexport const getGameState = async () => {\r\n    try {\r\n        log('Calling GET /');\r\n        const response = await axiosInstance.get('/');\r\n        log('Response from GET /:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const aiMove = async () => {\r\n    try {\r\n        console.log('Calling POST /ai-move/');\r\n        const response = await axiosInstance.post('/ai-move/');\r\n        console.log(response);\r\n        console.log('Response from POST /ai-move/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const opponentMove = async (move) => {\r\n    try {\r\n        log('Calling POST /opponent-move/ with move:', move);\r\n        const response = await axiosInstance.post('/opponent-move/', { move });\r\n        log('Response from POST /opponent-move/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n\r\nexport const resetGame = async () => {\r\n    try {\r\n        log('Calling POST /reset/');\r\n        const response = await axiosInstance.post('/reset/');\r\n        log('Response from POST /reset/:', response.data);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw handleApiError(error);\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}