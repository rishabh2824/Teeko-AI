{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\PycharmProjects\\\\hw9\\\\myteekoai\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './components/board';\nimport Controls from './components/controls';\nimport { getGameState, aiMove, opponentMove, resetGame } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState('');\n  const [gameStatus, setGameStatus] = useState('');\n  const [selectedCell, setSelectedCell] = useState(null);\n  useEffect(() => {\n    // Fetch initial game state\n    const fetchGameState = async () => {\n      const data = await getGameState();\n      setBoard(data.board);\n      setTurn(data.turn);\n      setGameStatus(data.game_status);\n    };\n    fetchGameState();\n  }, []);\n  const handleCellClick = async (row, col) => {\n    if (gameStatus === 'over') {\n      alert('Game is over. Reset to start a new game.');\n      return;\n    }\n    if (!selectedCell) {\n      // Select the first cell for opponent move\n      setSelectedCell([row, col]);\n    } else {\n      // Send opponent move to API\n      try {\n        const move = [selectedCell, [row, col]];\n        const data = await opponentMove(move);\n        setBoard(data.board);\n        setGameStatus(data.game_status);\n        setTurn(data.turn);\n      } catch (error) {\n        alert(error.response.data.detail);\n      } finally {\n        setSelectedCell(null);\n      }\n    }\n  };\n  const handleAIMove = async () => {\n    if (gameStatus === 'over') {\n      alert('Game is over. Reset to start a new game.');\n      return;\n    }\n    const data = await aiMove();\n    setBoard(data.board);\n    setGameStatus(data.game_status);\n    setTurn(data.turn);\n  };\n  const handleReset = async () => {\n    const data = await resetGame();\n    const newGameState = await getGameState();\n    setBoard(newGameState.board);\n    setGameStatus(newGameState.game_status);\n    setTurn(newGameState.turn);\n    setSelectedCell(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Teeko Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Turn: \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Status: \", gameStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      board: board,\n      onCellClick: handleCellClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      onAIMove: handleAIMove,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"QEZik0ycTJ+go6RMT/FDrkk6Wjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Board","Controls","getGameState","aiMove","opponentMove","resetGame","jsxDEV","_jsxDEV","App","_s","board","setBoard","turn","setTurn","gameStatus","setGameStatus","selectedCell","setSelectedCell","fetchGameState","data","game_status","handleCellClick","row","col","alert","move","error","response","detail","handleAIMove","handleReset","newGameState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onCellClick","onAIMove","onReset","_c","$RefreshReg$"],"sources":["C:/Users/risha/PycharmProjects/hw9/myteekoai/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './components/board';\nimport Controls from './components/controls';\nimport { getGameState, aiMove, opponentMove, resetGame } from './api';\n\nconst App = () => {\n    const [board, setBoard] = useState([]);\n    const [turn, setTurn] = useState('');\n    const [gameStatus, setGameStatus] = useState('');\n    const [selectedCell, setSelectedCell] = useState(null);\n\n    useEffect(() => {\n        // Fetch initial game state\n        const fetchGameState = async () => {\n            const data = await getGameState();\n            setBoard(data.board);\n            setTurn(data.turn);\n            setGameStatus(data.game_status);\n        };\n        fetchGameState();\n    }, []);\n\n    const handleCellClick = async (row, col) => {\n        if (gameStatus === 'over') {\n            alert('Game is over. Reset to start a new game.');\n            return;\n        }\n\n        if (!selectedCell) {\n            // Select the first cell for opponent move\n            setSelectedCell([row, col]);\n        } else {\n            // Send opponent move to API\n            try {\n                const move = [selectedCell, [row, col]];\n                const data = await opponentMove(move);\n                setBoard(data.board);\n                setGameStatus(data.game_status);\n                setTurn(data.turn);\n            } catch (error) {\n                alert(error.response.data.detail);\n            } finally {\n                setSelectedCell(null);\n            }\n        }\n    };\n\n    const handleAIMove = async () => {\n        if (gameStatus === 'over') {\n            alert('Game is over. Reset to start a new game.');\n            return;\n        }\n        const data = await aiMove();\n        setBoard(data.board);\n        setGameStatus(data.game_status);\n        setTurn(data.turn);\n    };\n\n    const handleReset = async () => {\n        const data = await resetGame();\n        const newGameState = await getGameState();\n        setBoard(newGameState.board);\n        setGameStatus(newGameState.game_status);\n        setTurn(newGameState.turn);\n        setSelectedCell(null);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Teeko Game</h1>\n            <h2>Turn: {turn}</h2>\n            <h3>Status: {gameStatus}</h3>\n            <Board board={board} onCellClick={handleCellClick} />\n            <Controls onAIMove={handleAIMove} onReset={handleReset} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}